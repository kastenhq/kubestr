// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/kastenhq/kubestr/pkg/csi (interfaces: KubeExecutor)

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockKubeExecutor is a mock of KubeExecutor interface.
type MockKubeExecutor struct {
	ctrl     *gomock.Controller
	recorder *MockKubeExecutorMockRecorder
}

// MockKubeExecutorMockRecorder is the mock recorder for MockKubeExecutor.
type MockKubeExecutorMockRecorder struct {
	mock *MockKubeExecutor
}

// NewMockKubeExecutor creates a new mock instance.
func NewMockKubeExecutor(ctrl *gomock.Controller) *MockKubeExecutor {
	mock := &MockKubeExecutor{ctrl: ctrl}
	mock.recorder = &MockKubeExecutorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockKubeExecutor) EXPECT() *MockKubeExecutorMockRecorder {
	return m.recorder
}

// Exec mocks base method.
func (m *MockKubeExecutor) Exec(arg0 context.Context, arg1, arg2, arg3 string, arg4 []string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Exec", arg0, arg1, arg2, arg3, arg4)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Exec indicates an expected call of Exec.
func (mr *MockKubeExecutorMockRecorder) Exec(arg0, arg1, arg2, arg3, arg4 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Exec", reflect.TypeOf((*MockKubeExecutor)(nil).Exec), arg0, arg1, arg2, arg3, arg4)
}
