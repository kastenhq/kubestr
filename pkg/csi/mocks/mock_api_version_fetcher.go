// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/kastenhq/kubestr/pkg/csi (interfaces: ApiVersionFetcher)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	v1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// MockApiVersionFetcher is a mock of ApiVersionFetcher interface.
type MockApiVersionFetcher struct {
	ctrl     *gomock.Controller
	recorder *MockApiVersionFetcherMockRecorder
}

// MockApiVersionFetcherMockRecorder is the mock recorder for MockApiVersionFetcher.
type MockApiVersionFetcherMockRecorder struct {
	mock *MockApiVersionFetcher
}

// NewMockApiVersionFetcher creates a new mock instance.
func NewMockApiVersionFetcher(ctrl *gomock.Controller) *MockApiVersionFetcher {
	mock := &MockApiVersionFetcher{ctrl: ctrl}
	mock.recorder = &MockApiVersionFetcherMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockApiVersionFetcher) EXPECT() *MockApiVersionFetcherMockRecorder {
	return m.recorder
}

// GetCSISnapshotGroupVersion mocks base method.
func (m *MockApiVersionFetcher) GetCSISnapshotGroupVersion() (*v1.GroupVersionForDiscovery, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetCSISnapshotGroupVersion")
	ret0, _ := ret[0].(*v1.GroupVersionForDiscovery)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetCSISnapshotGroupVersion indicates an expected call of GetCSISnapshotGroupVersion.
func (mr *MockApiVersionFetcherMockRecorder) GetCSISnapshotGroupVersion() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetCSISnapshotGroupVersion", reflect.TypeOf((*MockApiVersionFetcher)(nil).GetCSISnapshotGroupVersion))
}
